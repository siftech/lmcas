#!/usr/bin/env bash

set -euo pipefail

# Runs docker container for a given target & test combination
# Input:
#   - bin_dir: the directory of the current target binary we are running tests for
#   - test_results: a directory for where to store test results (logs for each test stored here)
#   - command: The command to run inside of the docker container
runDockerContainer(){
    target=$1
    log_file=$2
    bin_dir=$3
    test_results=$4

    dst_results="/test/$target/test-results"
    read -ra script <<< "$5 $dst_results/logs/$log_file"

    ctrName="test-$target"
    errorMessage="Failed to produce log output for target $target"

    mkdir -p "$test_results"

    docker run \
	--rm \
	--privileged \
	--name="$ctrName" \
	--mount type=bind,src="$(realpath test/tabacco-targets)",dst=/test/tabacco-targets \
	--mount type=bind,src="$(realpath "$test_results")",dst="$dst_results" \
	--mount type=bind,src="$(realpath "$bin_dir")",dst=/test/"$target"/target-binaries \
	--mount type=bind,src="$(realpath utils)",dst=/test/utils \
	lmcas-test sh "${script[@]}" || [ -f "$test_results/logs/$log_file" ]  || (echo "$errorMessage" && exit 1)

}

now=$(date +%Y-%m-%d-%H:%M:%S)
results_dir="test/results/$now"
mkdir -p "$results_dir/test-results/logs"

testResults="$results_dir/test-results"

log_file="$results_dir/log"

exec &> >(tee -a "$log_file")

echo "Running LMCAS TaBaCCo test suite..."

./tools/host/lmcas-dev-shell /code/test/build-tests --result-dir "$results_dir" "${@}"

echo "Building testing image..."
docker build -t "lmcas-test" test/

testing_dir="test/tabacco-targets"

echo "Starting docker tests..."
# There must be at least one target binary in the directory
if [ "$(ls -A "$results_dir"/target-binaries/debloated-targets/)" ]; then
    for dir in "$results_dir"/target-binaries/debloated-targets/*/; do
        target=$(basename "$dir")
        test_target_dir=$testing_dir/$target
            for test_dir in "$test_target_dir"/*/; do
               if [ -f "$test_dir/test.sh" ]; then
                   test_name=$(basename "$test_dir")
		   log_base="$target-$test_name"
		   if [ "$target" = "tabacco-cps" ] || [ "$target" = "uwisc" ]; then
		       log_file="$log_base-log.json"
                       run_tests="test/tabacco-targets/$target/$test_name/test.sh"
                       runDockerContainer "$target" "$log_file" "$dir" "$testResults" "$run_tests"
                   else
		       bloated_log="$log_base-bloated-log.json"
                       bloated="test/tabacco-targets/$target/$test_name/test.sh bloated"		 
		       debloated_log="$log_base-debloated-log.json"
		       debloated="test/tabacco-targets/$target/$test_name/test.sh debloated"
                       runDockerContainer "$target" "$bloated_log" "$dir" "$testResults" "$bloated"
                       runDockerContainer "$target" "$debloated_log" "$dir" "$testResults" "$debloated"
                   fi
               fi
            done
    done
fi

ctrName="test-log"
./tools/host/lmcas-dev-shell /code/test/compare_sizes.py "/code/$results_dir/target-binaries/debloated-targets"
docker run \
    --rm \
    --name=$ctrName \
    --mount type=bind,src="$(realpath test/tabacco-targets/summarize-tests.py)",dst=/summarize-tests.py \
    --mount type=bind,src="$(realpath "$testResults/logs")",dst=/logs \
    lmcas-test python summarize-tests.py
